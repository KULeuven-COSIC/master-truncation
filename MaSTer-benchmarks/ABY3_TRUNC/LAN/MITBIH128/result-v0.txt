Using security parameter 40
Trying to run 64-bit computation
----------------------------------
Compiler: ./compile.py -R 64 MITBIH_inference128
	624 triples of malicious replicated Z2^64 left
	5376 bits of malicious replicated Z2^64 left
2 threads spent a total of 0.860596 seconds (49.0735 MB, 2858 rounds) on the online phase, 3.3121 seconds (142.71 MB, 1911 rounds) on the preprocessing/offline phase, and 4.17891 seconds idling.
Communication details (rounds in parallel threads counted double):
Broadcasting 0.039583 MB in 1400 rounds, taking 0.311966 seconds
Passing around 191.344 MB in 2509 rounds, taking 0.721805 seconds
Receiving directly 1.31574 MB in 573 rounds, taking 0.11877 seconds
Sending directly 0.36016 MB in 287 rounds, taking 0.0147183 seconds
CPU time = 4.05235 (overall core time)
The following benchmarks are including preprocessing (offline phase).
Time = 4.17512 seconds 
Data sent = 191.784 MB in ~4769 rounds (party 0 only)
Global data sent = 576.684 MB (all parties)
Actual cost of program:
  Type int
       3029376        Triples
        474624           Bits
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_edabit(True)
Command line: ./malicious-rep-ring-party.x -v -p 0 -ip HOSTS MITBIH_inference128
